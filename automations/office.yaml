- alias: 'Turn the physical light switch back on after 10mins'
  id: 'turn_the_physical_light_switch_back_on_after_10mins'
  trigger:
    platform: state
    entity_id: switch.office_light_switch_left
    to: 'off'
    for:
      minutes: 10
  action:
    service: switch.turn_on
    target:
      entity_id: switch.office_light_switch_left

- alias: 'turn_off_office_light'
  id: 'turn_off_office_light'
  trigger:
    platform: state
    entity_id: switch.office_light_switch_right
    to: 'off'
  action:
      - service: timer.finish
        target:
          entity_id: timer.office
      - service: light.turn_off
        target:
          entity_id: light.office_light
      - service: switch.turn_off
        target:
          entity_id: switch.office_monitors

- alias: '[Office] Turn on the light/monitor when there is movement (and the light is off)'
  trigger:
    platform: state
    entity_id: binary_sensor.office_sensor_occupancy
    to: 'on'
  condition:
    - condition: time
      before: '17:00:00'
    - condition: state
      entity_id: light.office_light
      state: 'off'
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.office_light_switch_right
    - service: switch.turn_on
      target:
        entity_id: switch.office_monitors
    - service: light.turn_on
      target:
        entity_id: light.office_light
      data:
        brightness: 254

- alias: '[Office] Turn on the light/monitor when there is movement after 9pm (and the light is off)'
  trigger:
    platform: state
    entity_id: binary_sensor.office_sensor_occupancy
    to: 'on'
  condition:
    - condition: time
      after: '17:01:00'
    - condition: state
      entity_id: light.office_light
      state: 'off'
  action:
    - service: switch.turn_on
      target:
        entity_id: switch.office_light_switch_right
    - service: switch.turn_on
      target:
        entity_id: switch.office_monitors
    - service: light.turn_on
      target:
        entity_id: light.office_light
      data:
        brightness: 20

- id: "office_cube_rotate_right_increase_light"
  trigger:
    platform: state
    entity_id: sensor.cube_action
    to: 'rotate_right'
  condition:
    - condition: state
      entity_id: light.office_light
      state: 'on'
  action:
    - service: light.turn_on
      target:
        entity_id: light.office_light
      data_template:
        brightness: '{{states.light.office_light.attributes.brightness + 15}}'

- alias: '[Office] Start/Restart timer if occupancy'
  trigger:
    - platform: state
      entity_id: binary_sensor.office_sensor_occupancy
      to: 'on'
  action:
    service: timer.start
    target:
      entity_id: timer.office

- alias: "[Office] If the timer ends but we still have occupancy reset it"
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.office
  condition:
    - condition: state
      entity_id: binary_sensor.office_sensor_occupancy
      state: 'on'
  action:
    service: timer.start
    target:
      entity_id: timer.office

- alias: "[Office] If the timer ends and we have no occupancy turn off the light/monitors"
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.office
  condition:
    - condition: state
      entity_id: binary_sensor.office_sensor_occupancy
      state: 'off'
  action:
    - service: light.turn_off
      target:
        entity_id: light.office_light
    - service: switch.turn_off
      target:
        entity_id: switch.office_monitors


